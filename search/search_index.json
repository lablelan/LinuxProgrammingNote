{
    "docs": [
        {
            "location": "/",
            "text": "",
            "title": "\u4e3b\u9875"
        },
        {
            "location": "/LinuxProgramming/Chapter01/ch01_01/",
            "text": "",
            "title": "\u5165\u95e8"
        },
        {
            "location": "/LinuxProgramming/Chapter02/ch02_01/",
            "text": "",
            "title": "Shell\u7a0b\u5e8f\u8bbe\u8ba1"
        },
        {
            "location": "/LinuxProgramming/Chapter03/ch03_01/",
            "text": "\u7cfb\u7edf\u8c03\u7528-\u5e93\u51fd\u6570\n\n\n\n\n\n\n\n\nName\n\n\nDescriptions\n\n\n\n\n\n\n\n\n\n\nopen\n\n\n\u6253\u5f00\u6587\u4ef6\u6216\u8bbe\u5907\n\n\n\n\n\n\nread\n\n\n\u4ece\u6253\u5f00\u7684\u6587\u4ef6\u6216\u8bbe\u5907\u91cc\u8bfb\u6570\u636e\n\n\n\n\n\n\nwrite\n\n\n\u5411\u6587\u4ef6\u6216\u8bbe\u5907\u5199\u6570\u636e\n\n\n\n\n\n\nclose\n\n\n\u5173\u95ed\u6587\u4ef6\u6216\u8bbe\u5907\n\n\n\n\n\n\nioctl\n\n\n\u628a\u63a7\u5236\u4fe1\u606f\u4f20\u9012\u7ed9\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\n\n\n\n\n\n\n\n\n1.write\u7cfb\u7edf\u8c03\u7528\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/* size_t write(int fildes, const void *buf, size_t nbytes);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @buf    \u5199\u5165\u7684buf\n* @nbytes \u5199\u5165\u5b57\u8282\u6570\n* @return \u5b9e\u9645\u5199\u5165\u5b57\u8282\u6570\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\nint main()\n{\n    if ((write(1, \"Here is some data\\n\", 18)) != 18)\n    {\n        write(2, \"A write error has occurred on file descriptor 1\\n\", 46);\n    }\n\n    exit(0);\n}\n\n\n\n\n2.read\u7cfb\u7edf\u8c03\u7528\n\n\n#include<unistd.h>\n#include<stdio.h>\n#include<stdlib.h>\n\n/*\n* size_t read(int fildes, void *buf, size_t nbytes);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @buf \u8bfb\u53d6\u7f13\u51b2buf\n* @nbytes \u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u5b57\u8282\u6570\n* @return \u8fd4\u56de\u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\nint main(int argc, char *argv[])\n{\n    char buffer[128];\n    int nread;\n\n    nread = read(0, buffer, 128);\n    if (nread == -1)\n    {\n        write(2, \"A read error has occurred\\n\", 26);\n    }\n\n    if ((write(1, buffer, nread)) != nread)\n    {\n        write(2, \"A write error has occurred\\n\", 27);\n    }\n\n    printf(\"argc:%d, argv[0]:%s, argv[1]:%s\", argc, argv[0], argv[1]);\n\n    exit(0);\n}\n\n\n\n\n3.open\u7cfb\u7edf\u8c03\u7528\n\n\n#include<stdio.h>\n#include<stdlib.h>\n\n#include<fcntl.h>\n#include<sys/types.h>\n#include<sys/stat.h>\n\n/*\n* int open(const char *path, int oflags);\n* @path \u6587\u4ef6\u8def\u5f84\n* @oflags \u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u91c7\u7528\u7684\u884c\u4e3a(\u53ea\u8bfb/\u53ea\u5199/\u8bfb\u5199)|(\u672b\u5c3e\u8ffd\u52a0/\u4e22\u5f03\u5df2\u6709\u5185\u5bb9)\n* @return \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26,\u8fd4\u56de-1\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cferrno\u6765\u6307\u660e\u5931\u8d25\u539f\u56e0\n*\n* int open(const char *path, int oflags, mode_t mode);\n* @path \u6587\u4ef6\u8def\u5f84\n* @oflags \u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u91c7\u7528\u7684\u884c\u4e3a(\u53ea\u8bfb/\u53ea\u5199/\u8bfb\u5199)|(\u672b\u5c3e\u8ffd\u52a0/\u5bf9\u9f50\u5df2\u6709\u5185\u5bb9/\u6309\u53c2\u6570mode\u8bbf\u95ee\u6a21\u5f0f\u521b\u5efa\u6587\u4ef6/\u963b>\u6b62\u540c\u65f6\u521b\u5efa\u540c\u4e00\u4e2a\u6587\u4ef6)\n* @mode \u5f53oflags\u5e26\u6709O_CREAT\u521b\u5efa\u6807\u5fd7\u65f6\uff0c\u6307\u5b9a\u521b\u5efa\u6587\u4ef6\u7684\u6743\u9650\u53ca\u6240\u5c5e\uff08\u4e0eumask\u6709\u5173\uff09\n* @return \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd4\u56de-1\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cferrno\u6765\u6307\u660e\u5931\u8d25\u539f\u56e0\n*/\n\nint main()\n{\n    int err = open(\"myfile\", O_CREAT|O_EXCL, S_IRUSR|S_IXOTH);\n\n    printf(\"%d\", err);\n\n    exit(0);\n}\n\n\n\n\n4.close\u7cfb\u7edf\u8c03\u7528\n\n\n#include <fcntl.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <unistd.h>\n\n/*\n* int close(int fildes);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @return \u91ca\u653e\u6587\u4ef6\u63cf\u8ff0\u7b26\u6210\u8fd4\u56de0\uff0c\u5426\u5219\u8fd4\u56de-1\n*/\n\nint main()\n{\n   int fd = open(\"myfile\", O_RDONLY);\n\n   printf(\"fd:%d\\n\", fd);\n\n   int close_err = close(fd);\n   printf(\"close_err:%d\\n\", close_err);\n\n   exit(0);\n}\n\n\n\n\n5.ioctl\u7cfb\u7edf\u8c03\u7528\n\n\n#include <stdio.h>\n\n#include <unistd.h>\n\n/*\n* int ioctl(int fildes, int cmd, ...);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @cmd \u6587\u4ef6\u63cf\u8ff0\u7b26\u5f15\u7528\u5bf9\u8c61\u6267\u884c\u7684\u64cd\u4f5c\n* @... \u6267\u884c\u64cd\u4f5c\u7684\u4e0d\u540c\u7684\u53ef\u9009\u8865\u5145\u53c2\u6570\n* @return \u8fd4\u56de\u64cd\u4f5c\u662f\u5426\u6210\u529f\n*/\n\nint main()\n{\n    // linux\u7cfb\u7edf\u4e0a\u5c06\u952e\u76d8\u7684LED\u7b49\u6253\u5f00\n    ioctl(tty_fd, KDSETLED, LED_NUM|LED_CAP|LED_SCR);\n\n    exit(0);\n}",
            "title": "\u7cfb\u7edf\u8c03\u7528-\u5e93\u51fd\u6570"
        },
        {
            "location": "/LinuxProgramming/Chapter03/ch03_01/#-",
            "text": "Name  Descriptions      open  \u6253\u5f00\u6587\u4ef6\u6216\u8bbe\u5907    read  \u4ece\u6253\u5f00\u7684\u6587\u4ef6\u6216\u8bbe\u5907\u91cc\u8bfb\u6570\u636e    write  \u5411\u6587\u4ef6\u6216\u8bbe\u5907\u5199\u6570\u636e    close  \u5173\u95ed\u6587\u4ef6\u6216\u8bbe\u5907    ioctl  \u628a\u63a7\u5236\u4fe1\u606f\u4f20\u9012\u7ed9\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f     1.write\u7cfb\u7edf\u8c03\u7528  #include <stdio.h>\n#include <stdlib.h>\n\n/* size_t write(int fildes, const void *buf, size_t nbytes);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @buf    \u5199\u5165\u7684buf\n* @nbytes \u5199\u5165\u5b57\u8282\u6570\n* @return \u5b9e\u9645\u5199\u5165\u5b57\u8282\u6570\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\nint main()\n{\n    if ((write(1, \"Here is some data\\n\", 18)) != 18)\n    {\n        write(2, \"A write error has occurred on file descriptor 1\\n\", 46);\n    }\n\n    exit(0);\n}  2.read\u7cfb\u7edf\u8c03\u7528  #include<unistd.h>\n#include<stdio.h>\n#include<stdlib.h>\n\n/*\n* size_t read(int fildes, void *buf, size_t nbytes);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @buf \u8bfb\u53d6\u7f13\u51b2buf\n* @nbytes \u4ece\u6587\u4ef6\u8bfb\u53d6\u7684\u5b57\u8282\u6570\n* @return \u8fd4\u56de\u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\nint main(int argc, char *argv[])\n{\n    char buffer[128];\n    int nread;\n\n    nread = read(0, buffer, 128);\n    if (nread == -1)\n    {\n        write(2, \"A read error has occurred\\n\", 26);\n    }\n\n    if ((write(1, buffer, nread)) != nread)\n    {\n        write(2, \"A write error has occurred\\n\", 27);\n    }\n\n    printf(\"argc:%d, argv[0]:%s, argv[1]:%s\", argc, argv[0], argv[1]);\n\n    exit(0);\n}  3.open\u7cfb\u7edf\u8c03\u7528  #include<stdio.h>\n#include<stdlib.h>\n\n#include<fcntl.h>\n#include<sys/types.h>\n#include<sys/stat.h>\n\n/*\n* int open(const char *path, int oflags);\n* @path \u6587\u4ef6\u8def\u5f84\n* @oflags \u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u91c7\u7528\u7684\u884c\u4e3a(\u53ea\u8bfb/\u53ea\u5199/\u8bfb\u5199)|(\u672b\u5c3e\u8ffd\u52a0/\u4e22\u5f03\u5df2\u6709\u5185\u5bb9)\n* @return \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26,\u8fd4\u56de-1\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cferrno\u6765\u6307\u660e\u5931\u8d25\u539f\u56e0\n*\n* int open(const char *path, int oflags, mode_t mode);\n* @path \u6587\u4ef6\u8def\u5f84\n* @oflags \u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u91c7\u7528\u7684\u884c\u4e3a(\u53ea\u8bfb/\u53ea\u5199/\u8bfb\u5199)|(\u672b\u5c3e\u8ffd\u52a0/\u5bf9\u9f50\u5df2\u6709\u5185\u5bb9/\u6309\u53c2\u6570mode\u8bbf\u95ee\u6a21\u5f0f\u521b\u5efa\u6587\u4ef6/\u963b>\u6b62\u540c\u65f6\u521b\u5efa\u540c\u4e00\u4e2a\u6587\u4ef6)\n* @mode \u5f53oflags\u5e26\u6709O_CREAT\u521b\u5efa\u6807\u5fd7\u65f6\uff0c\u6307\u5b9a\u521b\u5efa\u6587\u4ef6\u7684\u6743\u9650\u53ca\u6240\u5c5e\uff08\u4e0eumask\u6709\u5173\uff09\n* @return \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd4\u56de-1\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cferrno\u6765\u6307\u660e\u5931\u8d25\u539f\u56e0\n*/\n\nint main()\n{\n    int err = open(\"myfile\", O_CREAT|O_EXCL, S_IRUSR|S_IXOTH);\n\n    printf(\"%d\", err);\n\n    exit(0);\n}  4.close\u7cfb\u7edf\u8c03\u7528  #include <fcntl.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <unistd.h>\n\n/*\n* int close(int fildes);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @return \u91ca\u653e\u6587\u4ef6\u63cf\u8ff0\u7b26\u6210\u8fd4\u56de0\uff0c\u5426\u5219\u8fd4\u56de-1\n*/\n\nint main()\n{\n   int fd = open(\"myfile\", O_RDONLY);\n\n   printf(\"fd:%d\\n\", fd);\n\n   int close_err = close(fd);\n   printf(\"close_err:%d\\n\", close_err);\n\n   exit(0);\n}  5.ioctl\u7cfb\u7edf\u8c03\u7528  #include <stdio.h>\n\n#include <unistd.h>\n\n/*\n* int ioctl(int fildes, int cmd, ...);\n* @fildes \u6587\u4ef6\u63cf\u8ff0\u7b26\n* @cmd \u6587\u4ef6\u63cf\u8ff0\u7b26\u5f15\u7528\u5bf9\u8c61\u6267\u884c\u7684\u64cd\u4f5c\n* @... \u6267\u884c\u64cd\u4f5c\u7684\u4e0d\u540c\u7684\u53ef\u9009\u8865\u5145\u53c2\u6570\n* @return \u8fd4\u56de\u64cd\u4f5c\u662f\u5426\u6210\u529f\n*/\n\nint main()\n{\n    // linux\u7cfb\u7edf\u4e0a\u5c06\u952e\u76d8\u7684LED\u7b49\u6253\u5f00\n    ioctl(tty_fd, KDSETLED, LED_NUM|LED_CAP|LED_SCR);\n\n    exit(0);\n}",
            "title": "\u7cfb\u7edf\u8c03\u7528-\u5e93\u51fd\u6570"
        },
        {
            "location": "/LinuxProgramming/Chapter03/ch03_02/",
            "text": "\u7cfb\u7edf\u8c03\u7528-\u590d\u5236\u6587\u4ef6\u4f8b\u5b50\n\n\n\u51c6\u5907\uff1a1MB\u5927\u5c0f\u7684file.in\u6587\u4ef6\n\n\ndemo01 copy_sys.c\n\n\n#include <unistd.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <stdlib.h>\n\n/*\n* \u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u5730\u8bfb\u5199\uff0c1MB\u7684\u6587\u4ef6\u9700\u8981\u7cfb\u7edf\u8c03\u75282097152\u6b21\n*/\n\nint main()\n{\n    char c;\n    int in = -1, out = -1;\n\n    in = open(\"file.in\", O_RDONLY);\n    out = open(\"file.out\", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);\n    while(read(in, &c, 1) == 1)\n    {\n        write(out, &c, 1);\n    }\n\n    exit(0);\n}\n\n\n\n\ndemo02 copy_sys_block.c\n\n\n#include <unistd.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <stdlib.h>\n\n/*\n* \u4ee51024\u5b57\u8282\u4e3a\u4e00\u5757\u5730\u8bfb\u5199\uff0c1MB\u7684\u6587\u4ef6\u53ea\u97002048\u6b21\u7cfb\u7edf\u8c03\u7528\n*/\n\nint main()\n{\n    char block[1024] = { 0 };\n    int in = -1, out = -1;\n    int nread = 0;\n\n    in = open(\"file.in\", O_RDONLY);\n    out = open(\"file.out\", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);\n    while((nread = read(in, block, sizeof(block))) > 0)\n    {\n        write(out, block, nread);\n    }\n\n    exit(0);\n}\n\n\n\n\n\u6548\u7387\u5bf9\u6bd4:\n\n\nrm -rf file.out\nTIMEFORMAT=\"\" time ./copy_sys\nTIMEFORMAT=\"\" time ./copy_sys_block",
            "title": "\u7cfb\u7edf\u8c03\u7528-\u590d\u5236\u6587\u4ef6\u4f8b\u5b50"
        },
        {
            "location": "/LinuxProgramming/Chapter03/ch03_02/#-",
            "text": "\u51c6\u5907\uff1a1MB\u5927\u5c0f\u7684file.in\u6587\u4ef6  demo01 copy_sys.c  #include <unistd.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <stdlib.h>\n\n/*\n* \u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26\u5730\u8bfb\u5199\uff0c1MB\u7684\u6587\u4ef6\u9700\u8981\u7cfb\u7edf\u8c03\u75282097152\u6b21\n*/\n\nint main()\n{\n    char c;\n    int in = -1, out = -1;\n\n    in = open(\"file.in\", O_RDONLY);\n    out = open(\"file.out\", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);\n    while(read(in, &c, 1) == 1)\n    {\n        write(out, &c, 1);\n    }\n\n    exit(0);\n}  demo02 copy_sys_block.c  #include <unistd.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <stdlib.h>\n\n/*\n* \u4ee51024\u5b57\u8282\u4e3a\u4e00\u5757\u5730\u8bfb\u5199\uff0c1MB\u7684\u6587\u4ef6\u53ea\u97002048\u6b21\u7cfb\u7edf\u8c03\u7528\n*/\n\nint main()\n{\n    char block[1024] = { 0 };\n    int in = -1, out = -1;\n    int nread = 0;\n\n    in = open(\"file.in\", O_RDONLY);\n    out = open(\"file.out\", O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);\n    while((nread = read(in, block, sizeof(block))) > 0)\n    {\n        write(out, block, nread);\n    }\n\n    exit(0);\n}  \u6548\u7387\u5bf9\u6bd4:  rm -rf file.out\nTIMEFORMAT=\"\" time ./copy_sys\nTIMEFORMAT=\"\" time ./copy_sys_block",
            "title": "\u7cfb\u7edf\u8c03\u7528-\u590d\u5236\u6587\u4ef6\u4f8b\u5b50"
        },
        {
            "location": "/LinuxProgramming/Chapter03/ch03_03/",
            "text": "C\u6807\u51c6\u5e93-I/O\u51fd\u6570\n\n\n\n\n\n\n\n\nName\n\n\nDescriptions\n\n\n\n\n\n\n\n\n\n\nfopen\n\n\n\u7c7b\u4f3c\u5e95\u5c42\u7684opne\u7cfb\u7edf\u8c03\u7528\u3002\u6709\u8f93\u5165/\u8f93\u51fa\u7f13\u51b2\u3002\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u6d41\u3002\n\n\n\n\n\n\nfclose\n\n\n\u5173\u95ed\u6307\u5b9a\u7684\u6587\u4ef6\u6d41stream\uff0c\u4f7f\u6240\u6709\u5c1a\u672a\u5199\u51fa\u7684\u6570\u636e\u90fd\u5199\u51fa(close\u9690\u85cf\u6267\u884c\u4e86\u4e00\u6b21flush\u64cd\u4f5c)\u3002\n\n\n\n\n\n\nfflush\n\n\n\u628a\u6587\u4ef6\u6d41\u91cc\u672a\u5199\u51fa\u7684\u6570\u636e\u7acb\u5373\u5199\u51fa\u3002\n\n\n\n\n\n\nfseek\n\n\n\u4e0elseek\u5bf9\u5e94\u3002\u6307\u5b9a\u4e0b\u4e00\u6b21\u8bfb\u5199\u64cd\u4f5c\u7684\u6307\u5b9a\u4f4d\u7f6e\u3002\n\n\n\n\n\n\nfread\n\n\n\u4ece\u4e00\u4e2a\u6307\u5b9a\u6587\u4ef6\u6d41\u8bfb\u53d6\u6570\u636e\u8bb0\u5f55\uff0c\u5e76\u5199\u5230ptr\u6307\u5411\u7684\u6570\u636e\u7f13\u51b2\u533a\u3002\n\n\n\n\n\n\nfgetc\n\n\n\u4ece\u4e00\u4e2a\u6587\u4ef6\u6d41\u91cc\u53bb\u9664\u4e0b\u4e00\u4e2a\u5b57\u8282\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u8fd4\u56de\u3002\u5f53\u5b83\u8fbe\u5230\u6587\u4ef6\u5c3e\u6216\u51fa\u73b0\u9519\u8bef\u65f6\uff0c\u8fd4\u56deEOF\u3002\n\n\n\n\n\n\ngetc\n\n\n\u4e0efgetc\u4f5c\u7528\u76f8\u540c\uff0c\u5b83\u5f88\u53ef\u80fd\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2afgetc\u7684\u5b8f\u3002\n\n\n\n\n\n\ngetchar\n\n\n\u76f8\u5f53\u4e8egetc(stdin)\uff0c\u5b83\u4ece\u6807\u51c6\u8f93\u5165\u91cc\u8bfb\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u6ce8\u610f\u5b83\u628a\u5b57\u7b26\u5f53\u505aint\u800c\u4e0d\u662fchar\uff0c\u8fd9\u6837\u5c31\u8fd0\u884c\u6587\u4ef6\u5c3e(EOF)\u6807\u5fd7\u53d6\u503c-1\u3002\n\n\n\n\n\n\nfgets\n\n\n\u5c06\u5b57\u7b26\u5199\u5230\u53c2\u6570s\u6307\u5411\u7684\u7684\u5b57\u7b26\u4e32\u91cc\uff0c\u76f4\u5230\u9047\u5230 \u6362\u884c\u7b26/\u5df2\u7ecf\u8f93\u51fa\u4e86\u6307\u5b9a\u957f\u5ea6n-1\u4e2a\u5b57\u7b26/\u8fbe\u5230\u6587\u4ef6\u5c3e \u65f6\u5728\u7ed3\u5c3e\u52a0\u4e0a\\0\u3002\n\n\n\n\n\n\ngets\n\n\n\u4e0efgets\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u636e\u5e76\u4e22\u5f03\u9047\u5230\u7684\u6362\u884c\u7b26\\n\u3002\u5b83\u5728\u63a5\u6536\u5b57\u7b26\u4e32\u7684\u5c3e\u90e8\u52a0\u4e0a\u4e00\u4e2anull\u5b57\u8282\u3002\u6ce8\u610f\uff1aget\u5bf9\u4f20\u8f93\u5b57\u7b26\u4e2a\u6570\u5e76\u6ca1\u6709\u9650\u5236\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4f1a\u79fb\u9664\u5b57\u8282\u7684\u4f20\u8f93\u7f13\u51b2\u533a\u3002\n\n\n\n\n\n\nfwrite\n\n\n\u4ece\u4e00\u4e2a\u6307\u5b9a\u6587\u4ef6\u6d41\u53d6\u51fa\u6570\u636e\u8bb0\u5f55\uff0c\u5e76\u5199\u5230\u8f93\u51fa\u6d41\u4e2d\u3002\n\n\n\n\n\n\nfputc\n\n\n\u628a\u4e00\u4e2a\u5b57\u7b26\u5199\u5230\u4e00\u4e2a\u8f93\u51fa\u6587\u4ef6\u6d41\u4e2d\u3002\n\n\n\n\n\n\nputc\n\n\n\u4e0efputs\u4f5c\u7528\u76f8\u540c\uff0c\u5b83\u5f88\u53ef\u80fd\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2afputc\u7684\u5b8f\u3002\n\n\n\n\n\n\nputchar\n\n\n\u76f8\u5f53\u4e8eputc(c, stdout)\uff0c\u5b83\u628a\u5355\u4e2a\u5b57\u7b26\u5199\u5230\u6807\u51c6\u8f93\u51fa\u3002\u6ce8\u610f\u5b83\u628a\u5b57\u7b26\u5f53\u505aint\u800c\u4e0d\u662fchar\uff0c\u8fd9\u6837\u5c31\u8fd0\u884c\u6587\u4ef6\u5c3e(EOF)\u6807\u5fd7\u53d6\u503c-1\u3002\n\n\n\n\n\n\nfputs\n\n\n\u5c06\u53c2\u6570s\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6\u6d41stream\u4e2d\uff0c\u5199\u5165n\u4e2a\u5b57\u7b26\u3002\n\n\n\n\n\n\nputs\n\n\n\n\n\n\n\n\nprintf\n\n\n\u628a\u81ea\u5df1\u7684\u8f93\u51fa\u9001\u5230\u6807\u51c6\u8f93\u51fa\u3002\n\n\n\n\n\n\nfprintf\n\n\n\u628a\u81ea\u5df1\u7684\u8f93\u51fa\u9001\u5230\u6307\u5b9a\u6587\u4ef6\u6d41\n\n\n\n\n\n\nsprintf\n\n\n\u53d1\u81ea\u5df1\u7684\u8f93\u51fa\u548c\u4e00\u4e2a\u7ed3\u5c3e\u63a7\u5236\u9600\u5199\u5230\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fc7\u6765\u7684\u5b57\u7b26\u4e32s\u91cc\u3002\u8fd9\u4e2as\u5b57\u7b26\u4e32\u5fc5\u987b\u8db3\u591f\u5bb9\u7eb3\u6240\u6709\u7684\u8f93\u51fa\u6570\u636e\u3002\n\n\n\n\n\n\n\n\n1.fopen\u3001fclose\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n* FILE *fopen(const char *filename, const char *mode);\n* @filename \u6253\u5f00\u6587\u4ef6\u540d\n* @mode \u6253\u5f00\u6587\u4ef6\u65b9\u5f0f\n* @return \u6210\u529f\u8fd4\u56de\u6587\u4ef6\u6d41\uff0c\u5931\u8d25\u8fd4\u56deNULL\n*/\n\n/*\n* int fclose(FILE *stream);\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de\u975e0\n*/\n\nint main()\n{\n    FILE *in = NULL;\n\n    in = fopen(\"file.in\", \"r\");\n\n    if(in != NULL)\n    {\n        printf(\"in: %d\\n\", in);\n        int a = fgetc(in);\n        printf(\"%d\\n\", a);    \n    }\n    else\n    {\n        printf(\"fopen execuet error\\n\");\n    }\n\n    int close_ret = 0;\n    printf(\"in:%d\\n\", in);\n    close_ret = fclose(in);\n    printf(\"close_ret: %d\\n\", close_ret);\n\n    exit(0);\n}\n\n\n\n\n2.fgetc\u3001getc\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n* int fgetc(FILE *stream);\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u7b26\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\n/*\n* int getc(FILE *stream);\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u7b26\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\nint main()\n{\n    FILE *in = NULL;\n\n    in = fopen(\"file.in\", \"r\");\n\n    int c = fgetc(in);\n    printf(\"%c\\n\", c);\n    int b = getc(in);\n    printf(\"%c\\n\", b);\n\n    int ret = fclose(in);\n    printf(\"%d\\n\", ret);\n\n    return 0;\n}\n\n\n\n\n3.fgets\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n* char *fgets(char *s, int n, FILE *stream);\n* @s \u5b58\u653e\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\n* @n \u8bfb\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56des\u7684\u6307\u9488\uff0c\u5931\u8d25\u8fd4\u56deNULL\n*/\n\nint main()\n{\n    FILE *in = NULL;\n\n    in = fopen(\"file.in\", \"r\");\n    char s[1024] = { 0 };\n    char *tmp = NULL;\n\n    tmp = fgets(s, 1023, in);\n\n    if(tmp != NULL)\n    {\n        printf(\"%s\\n\", s);\n        printf(\"%s\\n\", tmp);\n    }\n\n    int ret = fclose(in);\n    printf(\"close:%d\\n\", ret);\n\n    exit(0);\n}\n\n\n\n\n4.fputc\u3001putc\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n* int fputc(int c, FILE *stream);\n* @c \u5c06\u8981\u5199\u5165\u7684\u5b57\u7b26\n* @stream \u6307\u5b9a\u7684\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56deEOP\n*/\n\n/*\n* int putc(int c, FILE *stream);\n* @c \u5c06\u8981\u5199\u5165\u7684\u5b57\u7b26\n* @stream \u6307\u5b9a\u7684\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56deEOF\n*/\n\nint main()\n{\n    FILE *out = NULL;\n    out = fopen(\"file.out\", \"w\");\n\n    if (out != NULL)\n    {\n        int fp_ret = fputc(64, out);\n        printf(\"fp_ret: %d\\n\", fp_ret);\n        int p_ret = putc(65, out);\n        printf(\"p_ret: %d\\n\", p_ret);\n    }\n\n    int close_ret = fclose(out);\n    printf(\"close_ret:%d\", close_ret);\n\n    exit(0);\n}\n\n\n\n\n5.fflush\n\n\n#include <stdio.h>\n#include <stdlib.h>\n\n/*\n * int fflush(FILE *stream);\n * @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n * @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56deEOF\n */\n\nint main()\n{\n    FILE *out = NULL;\n    out = fopen(\"file.out\", \"w\");\n\n    if (out != NULL)\n    {\n        fputc(67, out);\n        int ff_ret = fflush(out);\n        printf(\"ff_ret: %d\\n\", ff_ret);\n    }\n\n    while(1)\n    {\n        printf(\"cat the file.out\\n\");\n        sleep(1);\n    }\n\n    int close_ret = fclose(out);\n    printf(\"close_ret:%d\", close_ret);\n\n    exit(0);\n}",
            "title": "C\u6807\u51c6\u5e93-I/O\u51fd\u6570"
        },
        {
            "location": "/LinuxProgramming/Chapter03/ch03_03/#c-io",
            "text": "Name  Descriptions      fopen  \u7c7b\u4f3c\u5e95\u5c42\u7684opne\u7cfb\u7edf\u8c03\u7528\u3002\u6709\u8f93\u5165/\u8f93\u51fa\u7f13\u51b2\u3002\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u6d41\u3002    fclose  \u5173\u95ed\u6307\u5b9a\u7684\u6587\u4ef6\u6d41stream\uff0c\u4f7f\u6240\u6709\u5c1a\u672a\u5199\u51fa\u7684\u6570\u636e\u90fd\u5199\u51fa(close\u9690\u85cf\u6267\u884c\u4e86\u4e00\u6b21flush\u64cd\u4f5c)\u3002    fflush  \u628a\u6587\u4ef6\u6d41\u91cc\u672a\u5199\u51fa\u7684\u6570\u636e\u7acb\u5373\u5199\u51fa\u3002    fseek  \u4e0elseek\u5bf9\u5e94\u3002\u6307\u5b9a\u4e0b\u4e00\u6b21\u8bfb\u5199\u64cd\u4f5c\u7684\u6307\u5b9a\u4f4d\u7f6e\u3002    fread  \u4ece\u4e00\u4e2a\u6307\u5b9a\u6587\u4ef6\u6d41\u8bfb\u53d6\u6570\u636e\u8bb0\u5f55\uff0c\u5e76\u5199\u5230ptr\u6307\u5411\u7684\u6570\u636e\u7f13\u51b2\u533a\u3002    fgetc  \u4ece\u4e00\u4e2a\u6587\u4ef6\u6d41\u91cc\u53bb\u9664\u4e0b\u4e00\u4e2a\u5b57\u8282\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u8fd4\u56de\u3002\u5f53\u5b83\u8fbe\u5230\u6587\u4ef6\u5c3e\u6216\u51fa\u73b0\u9519\u8bef\u65f6\uff0c\u8fd4\u56deEOF\u3002    getc  \u4e0efgetc\u4f5c\u7528\u76f8\u540c\uff0c\u5b83\u5f88\u53ef\u80fd\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2afgetc\u7684\u5b8f\u3002    getchar  \u76f8\u5f53\u4e8egetc(stdin)\uff0c\u5b83\u4ece\u6807\u51c6\u8f93\u5165\u91cc\u8bfb\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u6ce8\u610f\u5b83\u628a\u5b57\u7b26\u5f53\u505aint\u800c\u4e0d\u662fchar\uff0c\u8fd9\u6837\u5c31\u8fd0\u884c\u6587\u4ef6\u5c3e(EOF)\u6807\u5fd7\u53d6\u503c-1\u3002    fgets  \u5c06\u5b57\u7b26\u5199\u5230\u53c2\u6570s\u6307\u5411\u7684\u7684\u5b57\u7b26\u4e32\u91cc\uff0c\u76f4\u5230\u9047\u5230 \u6362\u884c\u7b26/\u5df2\u7ecf\u8f93\u51fa\u4e86\u6307\u5b9a\u957f\u5ea6n-1\u4e2a\u5b57\u7b26/\u8fbe\u5230\u6587\u4ef6\u5c3e \u65f6\u5728\u7ed3\u5c3e\u52a0\u4e0a\\0\u3002    gets  \u4e0efgets\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u636e\u5e76\u4e22\u5f03\u9047\u5230\u7684\u6362\u884c\u7b26\\n\u3002\u5b83\u5728\u63a5\u6536\u5b57\u7b26\u4e32\u7684\u5c3e\u90e8\u52a0\u4e0a\u4e00\u4e2anull\u5b57\u8282\u3002\u6ce8\u610f\uff1aget\u5bf9\u4f20\u8f93\u5b57\u7b26\u4e2a\u6570\u5e76\u6ca1\u6709\u9650\u5236\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u80fd\u4f1a\u79fb\u9664\u5b57\u8282\u7684\u4f20\u8f93\u7f13\u51b2\u533a\u3002    fwrite  \u4ece\u4e00\u4e2a\u6307\u5b9a\u6587\u4ef6\u6d41\u53d6\u51fa\u6570\u636e\u8bb0\u5f55\uff0c\u5e76\u5199\u5230\u8f93\u51fa\u6d41\u4e2d\u3002    fputc  \u628a\u4e00\u4e2a\u5b57\u7b26\u5199\u5230\u4e00\u4e2a\u8f93\u51fa\u6587\u4ef6\u6d41\u4e2d\u3002    putc  \u4e0efputs\u4f5c\u7528\u76f8\u540c\uff0c\u5b83\u5f88\u53ef\u80fd\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2afputc\u7684\u5b8f\u3002    putchar  \u76f8\u5f53\u4e8eputc(c, stdout)\uff0c\u5b83\u628a\u5355\u4e2a\u5b57\u7b26\u5199\u5230\u6807\u51c6\u8f93\u51fa\u3002\u6ce8\u610f\u5b83\u628a\u5b57\u7b26\u5f53\u505aint\u800c\u4e0d\u662fchar\uff0c\u8fd9\u6837\u5c31\u8fd0\u884c\u6587\u4ef6\u5c3e(EOF)\u6807\u5fd7\u53d6\u503c-1\u3002    fputs  \u5c06\u53c2\u6570s\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6\u6d41stream\u4e2d\uff0c\u5199\u5165n\u4e2a\u5b57\u7b26\u3002    puts     printf  \u628a\u81ea\u5df1\u7684\u8f93\u51fa\u9001\u5230\u6807\u51c6\u8f93\u51fa\u3002    fprintf  \u628a\u81ea\u5df1\u7684\u8f93\u51fa\u9001\u5230\u6307\u5b9a\u6587\u4ef6\u6d41    sprintf  \u53d1\u81ea\u5df1\u7684\u8f93\u51fa\u548c\u4e00\u4e2a\u7ed3\u5c3e\u63a7\u5236\u9600\u5199\u5230\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fc7\u6765\u7684\u5b57\u7b26\u4e32s\u91cc\u3002\u8fd9\u4e2as\u5b57\u7b26\u4e32\u5fc5\u987b\u8db3\u591f\u5bb9\u7eb3\u6240\u6709\u7684\u8f93\u51fa\u6570\u636e\u3002     1.fopen\u3001fclose  #include <stdio.h>\n#include <stdlib.h>\n\n/*\n* FILE *fopen(const char *filename, const char *mode);\n* @filename \u6253\u5f00\u6587\u4ef6\u540d\n* @mode \u6253\u5f00\u6587\u4ef6\u65b9\u5f0f\n* @return \u6210\u529f\u8fd4\u56de\u6587\u4ef6\u6d41\uff0c\u5931\u8d25\u8fd4\u56deNULL\n*/\n\n/*\n* int fclose(FILE *stream);\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de\u975e0\n*/\n\nint main()\n{\n    FILE *in = NULL;\n\n    in = fopen(\"file.in\", \"r\");\n\n    if(in != NULL)\n    {\n        printf(\"in: %d\\n\", in);\n        int a = fgetc(in);\n        printf(\"%d\\n\", a);    \n    }\n    else\n    {\n        printf(\"fopen execuet error\\n\");\n    }\n\n    int close_ret = 0;\n    printf(\"in:%d\\n\", in);\n    close_ret = fclose(in);\n    printf(\"close_ret: %d\\n\", close_ret);\n\n    exit(0);\n}  2.fgetc\u3001getc  #include <stdio.h>\n#include <stdlib.h>\n\n/*\n* int fgetc(FILE *stream);\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u7b26\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\n/*\n* int getc(FILE *stream);\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u7b26\uff0c\u5931\u8d25\u8fd4\u56de-1\n*/\n\nint main()\n{\n    FILE *in = NULL;\n\n    in = fopen(\"file.in\", \"r\");\n\n    int c = fgetc(in);\n    printf(\"%c\\n\", c);\n    int b = getc(in);\n    printf(\"%c\\n\", b);\n\n    int ret = fclose(in);\n    printf(\"%d\\n\", ret);\n\n    return 0;\n}  3.fgets  #include <stdio.h>\n#include <stdlib.h>\n\n/*\n* char *fgets(char *s, int n, FILE *stream);\n* @s \u5b58\u653e\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\n* @n \u8bfb\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n* @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56des\u7684\u6307\u9488\uff0c\u5931\u8d25\u8fd4\u56deNULL\n*/\n\nint main()\n{\n    FILE *in = NULL;\n\n    in = fopen(\"file.in\", \"r\");\n    char s[1024] = { 0 };\n    char *tmp = NULL;\n\n    tmp = fgets(s, 1023, in);\n\n    if(tmp != NULL)\n    {\n        printf(\"%s\\n\", s);\n        printf(\"%s\\n\", tmp);\n    }\n\n    int ret = fclose(in);\n    printf(\"close:%d\\n\", ret);\n\n    exit(0);\n}  4.fputc\u3001putc  #include <stdio.h>\n#include <stdlib.h>\n\n/*\n* int fputc(int c, FILE *stream);\n* @c \u5c06\u8981\u5199\u5165\u7684\u5b57\u7b26\n* @stream \u6307\u5b9a\u7684\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56deEOP\n*/\n\n/*\n* int putc(int c, FILE *stream);\n* @c \u5c06\u8981\u5199\u5165\u7684\u5b57\u7b26\n* @stream \u6307\u5b9a\u7684\u6587\u4ef6\u6d41\n* @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56deEOF\n*/\n\nint main()\n{\n    FILE *out = NULL;\n    out = fopen(\"file.out\", \"w\");\n\n    if (out != NULL)\n    {\n        int fp_ret = fputc(64, out);\n        printf(\"fp_ret: %d\\n\", fp_ret);\n        int p_ret = putc(65, out);\n        printf(\"p_ret: %d\\n\", p_ret);\n    }\n\n    int close_ret = fclose(out);\n    printf(\"close_ret:%d\", close_ret);\n\n    exit(0);\n}  5.fflush  #include <stdio.h>\n#include <stdlib.h>\n\n/*\n * int fflush(FILE *stream);\n * @stream \u6307\u5b9a\u6587\u4ef6\u6d41\n * @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56deEOF\n */\n\nint main()\n{\n    FILE *out = NULL;\n    out = fopen(\"file.out\", \"w\");\n\n    if (out != NULL)\n    {\n        fputc(67, out);\n        int ff_ret = fflush(out);\n        printf(\"ff_ret: %d\\n\", ff_ret);\n    }\n\n    while(1)\n    {\n        printf(\"cat the file.out\\n\");\n        sleep(1);\n    }\n\n    int close_ret = fclose(out);\n    printf(\"close_ret:%d\", close_ret);\n\n    exit(0);\n}",
            "title": "C\u6807\u51c6\u5e93-I/O\u51fd\u6570"
        }
    ]
}